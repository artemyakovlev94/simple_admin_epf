
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.GUIDИдентификатораSimple.Видимость = Ложь;
	Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИдентификаторSimpleПоСсылкеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Элементы.GUIDИдентификатораSimple.Видимость = Ложь;
	
	СсылкаПоИдентификаторуSimple = Неопределено;
	GUIDИдентификатораSimple = "";
	Элементы.ГруппаСсылкаПоИдентификаторуSimpleТип.Подсказка = "";
	
	Если Не ПустаяСтрока(Элемент.ТекстРедактирования) Тогда
		
		ДанныеПоИдентификаторуSimple = ПолучитьСсылкуПоИдентификаторуSimple(Элемент.ТекстРедактирования);
		
		Если ДанныеПоИдентификаторуSimple = Неопределено Тогда
			ОчиститьСообщения();
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По идентификатору ""%1"" не удалось определить ссылку.'"), Элемент.ТекстРедактирования));
		Иначе
			ИдентификаторSimple = Элемент.ТекстРедактирования;
			СсылкаПоИдентификаторуSimple = ДанныеПоИдентификаторуSimple.Ссылка;
			GUIDИдентификатораSimple = ДанныеПоИдентификаторуSimple.GUID;
			Элементы.ГруппаСсылкаПоИдентификаторуSimpleТип.Подсказка = ДанныеПоИдентификаторуSimple.Описание;
			Элементы.GUIDИдентификатораSimple.Видимость = Истина;
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторSimpleОчистка(Элемент, СтандартнаяОбработка)
	Элементы.GUIDИдентификатораSimple.Видимость = Ложь;
	СсылкаПоИдентификаторуSimple = Неопределено;
	GUIDИдентификатораSimple = "";
	Элементы.ГруппаСсылкаПоИдентификаторуSimpleТип.Подсказка = "";
КонецПроцедуры

&НаКлиенте
Процедура СсылкаДляИдентификатораSimpleПриИзменении(Элемент)
	
	ИдентификаторSimpleДляСсылки = "";
	GUIDДляСсылки = "";
	Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Видимость = Ложь;
	Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Подсказка = "";
	
	Если ЗначениеЗаполнено(СсылкаДляИдентификатораSimple) Тогда
		
		ДанныеСсылки = ПолучитьИдентификаторSimpleПоСсылке(СсылкаДляИдентификатораSimple);
		
		Если ДанныеСсылки = Неопределено Тогда
			ОчиститьСообщения();
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По идентификатору ""%1"" не удалось определить ссылку.'"), Элемент.ТекстРедактирования));
		Иначе
			ИдентификаторSimpleДляСсылки = ДанныеСсылки.ИдентификаторSimple;
			GUIDДляСсылки = ДанныеСсылки.GUID;
			Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Подсказка = ДанныеСсылки.Описание;
			Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Видимость = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаДляИдентификатораSimpleОчистка(Элемент, СтандартнаяОбработка)
	
	ИдентификаторSimpleДляСсылки = "";
	GUIDДляСсылки = "";
	Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Видимость = Ложь;
	Элементы.ГруппаИдентификаторSimpleПоСсылкеТип.Подсказка = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуПоИдентификаторуSimple(Идентификатор)
	
	сткВозврат = Новый Структура("Ссылка, GUID, Описание");
	
	Модуль = ОбщегоНазначения.ОбщийМодуль("SUI_ИнтеграцияВКонфигурациюСервер");
	сткВозврат.Ссылка = Модуль.СсылкаПоИдентификаторуSimple(Идентификатор);
	
	МетаданныеСсылки = Метаданные.НайтиПоТипу(ТипЗнч(сткВозврат.Ссылка));
	
	Если МетаданныеСсылки = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Метаданные.Справочники.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Справочник";
	ИначеЕсли Метаданные.Документы.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Документ";
	ИначеЕсли Метаданные.БизнесПроцессы.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "БизнесПроцесс";
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланВидовХарактеристик";
	ИначеЕсли Метаданные.ПланыСчетов.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланСчетов";
	ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланВидовРасчета";
	ИначеЕсли Метаданные.Задачи.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Задача";
	ИначеЕсли Метаданные.ПланыОбмена.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланОбмена";
	ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Перечисление";
	Иначе
		ВидСсылки = "";
	КонецЕсли;
	
	Если ПустаяСтрока(ВидСсылки) Тогда
		сткВозврат.Описание = МетаданныеСсылки.Синоним;
	Иначе
		сткВозврат.Описание = ВидСсылки + ": " + МетаданныеСсылки.Синоним;
	КонецЕсли;
	
	сткВозврат.GUID = Строка(сткВозврат.Ссылка.УникальныйИдентификатор());
	
	Возврат сткВозврат;
	
КонецФункции
	
&НаСервереБезКонтекста
Функция ПолучитьИдентификаторSimpleПоСсылке(Ссылка)
	
	сткВозврат = Новый Структура("ИдентификаторSimple, GUID, Описание");
	
	Модуль = ОбщегоНазначения.ОбщийМодуль("SUI_ИнтеграцияВКонфигурациюСервер");
	сткВозврат.ИдентификаторSimple = Модуль.ИдентификаторSimpleПоСсылке(Ссылка);
	
	Если сткВозврат.ИдентификаторSimple = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МетаданныеСсылки = Метаданные.НайтиПоТипу(ТипЗнч(Ссылка));
	
	Если МетаданныеСсылки = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Метаданные.Справочники.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Справочник";
	ИначеЕсли Метаданные.Документы.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Документ";
	ИначеЕсли Метаданные.БизнесПроцессы.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "БизнесПроцесс";
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланВидовХарактеристик";
	ИначеЕсли Метаданные.ПланыСчетов.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланСчетов";
	ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланВидовРасчета";
	ИначеЕсли Метаданные.Задачи.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Задача";
	ИначеЕсли Метаданные.ПланыОбмена.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "ПланОбмена";
	ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеСсылки) Тогда
		ВидСсылки = "Перечисление";
	Иначе
		ВидСсылки = "";
	КонецЕсли;
	
	Если ПустаяСтрока(ВидСсылки) Тогда
		сткВозврат.Описание = МетаданныеСсылки.Синоним;
	Иначе
		сткВозврат.Описание = ВидСсылки + ": " + МетаданныеСсылки.Синоним;
	КонецЕсли;
	
	сткВозврат.GUID = Строка(Ссылка.УникальныйИдентификатор());
	
	Возврат сткВозврат;

КонецФункции

#КонецОбласти
